{"version":3,"sources":["components/Form.js","components/Header.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Input","styled","input","Form","setInput","todos","setTodos","editTodo","setEditTodo","useEffect","title","onSubmit","e","preventDefault","id","completed","newTodo","map","todo","updateTodo","uuidv4","type","placeholder","value","required","onChange","target","icon","faPenSquare","faPlusSquare","Header","Wrapper","div","List","li","Checkbox","TodoList","onClick","item","handleCheck","findTodo","find","handleEdit","faEdit","filter","handleDelete","faBan","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61bdcd0a.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare, faPenSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Form = ({ input, setInput, todos, setTodos, editTodo, setEditTodo }) => {\r\n    const updateTodo = (title, id, completed) => {\r\n        const newTodo = todos.map((todo) => \r\n            todo.id === id ? { title, id, completed } : todo\r\n        );\r\n        setTodos(newTodo);\r\n        setEditTodo(\"\");\r\n    };\r\n    useEffect(() => {\r\n        if (editTodo) {\r\n            setInput(editTodo.title); \r\n        } else {\r\n            setInput(\"\");\r\n        }\r\n    }, [setInput, editTodo]);\r\n\r\n    const inputChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!editTodo){\r\n            setTodos([...todos, {id: uuidv4(), title: input, completed: false}])\r\n        setInput(\"\");\r\n        } else {\r\n            updateTodo(input, editTodo.id, editTodo.completed)\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formSubmit}>\r\n            <Input\r\n            type=\"text\" \r\n            placeholder=\"Enter to do...\" \r\n            value={input}\r\n            required\r\n            onChange={inputChange}\r\n            />\r\n            <button type=\"submit\">\r\n                   {editTodo ? \r\n                   <FontAwesomeIcon icon={faPenSquare}/> : \r\n                   <FontAwesomeIcon icon={faPlusSquare} />}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Input = styled.input`\r\n\r\n`; \r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1>To Do List</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faBan } from '@fortawesome/free-solid-svg-icons'\r\nconst TodoList = ({ todos, setTodos, setEditTodo}) => {\r\n    const handleDelete = ({ id }) => {\r\n        setTodos(todos.filter((todo) => todo.id !== id))\r\n    };\r\n    const handleCheck = (todo ) => {\r\n       setTodos(\r\n           todos.map((item) => {\r\n               if(item.id === todo.id) {\r\n                   return {...item, completed: !item.completed}\r\n               }\r\n               return item;\r\n           })\r\n       )\r\n    }\r\n    const handleEdit = ({id}) => {\r\n        const findTodo = todos.find((todo) => todo.id === id);\r\n        setEditTodo(findTodo);\r\n\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            {todos.map((todo) => (\r\n                <List key={todo.id}>\r\n                    <Checkbox onClick={()=> handleCheck(todo)} type=\"checkbox\"/> \r\n                    <Input\r\n                    type=\"text\"\r\n                    value={todo.title}\r\n                    onChange={(e) => e.preventDefault()\r\n                    \r\n                    }\r\n                    />\r\n                        <button onClick={()=> handleEdit(todo)}><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={()=> handleDelete(todo)}> <FontAwesomeIcon icon={faBan} /></button>\r\n                </List>\r\n                )\r\n            )}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 10px;\r\n   \r\n    \r\n`;\r\n\r\nconst Input = styled.input`\r\n   \r\n    border: none;\r\n    cursor: default;\r\n    outline: none;\r\n    background-color: transparent;\r\n    width: 120px;\r\n    height: 25px;\r\n    font-weight: 700;\r\n\r\n`   \r\n\r\nconst List = styled.li`\r\n    display: flex;\r\n    margin: 10px;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n    list-style: none;\r\n    border: 1px solid black;\r\n    width: 25%;\r\n    height: 38px;\r\n    border-radius: 10px;\r\n\r\n\r\n    button {\r\n        margin: 0 2.5px;\r\n        border-radius: 50%;\r\n        width: 30px;\r\n        height: 30px;\r\n        align-items: center;\r\n        align-content: center;\r\n        cursor: pointer;\r\n    }\r\n    `;\r\n const Checkbox = styled.input`\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 20px;\r\n    margin-top: 5px;\r\n `;\r\n\r\n\r\nexport default TodoList\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [editTodo, setEditTodo] = useState(null);\n\n  return (\n    <div>\n      <div>\n        <div>\n        <Header/>\n        </div>\n        <div>\n          <Form\n            input={input}\n            setInput={setInput}\n            todos={todos}\n            setTodos={setTodos}\n            editTodo={editTodo}\n            setEditTodo={setEditTodo}\n          />\n        </div>\n        <div>\n          <TodoList \n          todos={todos} \n          setTodos={setTodos}\n          setEditTodo={setEditTodo}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}